// @generated
// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Events {
    #[prost(message, repeated, tag="1")]
    pub blocks: ::prost::alloc::vec::Vec<Block>,
    #[prost(message, repeated, tag="2")]
    pub blobs: ::prost::alloc::vec::Vec<Blob>,
    #[prost(message, repeated, tag="3")]
    pub deposits: ::prost::alloc::vec::Vec<Deposit>,
    #[prost(message, repeated, tag="4")]
    pub withdrawals: ::prost::alloc::vec::Vec<Withdrawal>,
    #[prost(message, repeated, tag="5")]
    pub attestations: ::prost::alloc::vec::Vec<Attestation>,
    #[prost(message, repeated, tag="6")]
    pub attester_slashings: ::prost::alloc::vec::Vec<AttesterSlashing>,
    #[prost(message, repeated, tag="7")]
    pub bls_to_execution_changes: ::prost::alloc::vec::Vec<BlsToExecutionChange>,
    #[prost(message, repeated, tag="8")]
    pub proposer_slashings: ::prost::alloc::vec::Vec<ProposerSlashing>,
    #[prost(message, repeated, tag="9")]
    pub voluntary_exits: ::prost::alloc::vec::Vec<VoluntaryExit>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Block {
    /// clock
    #[prost(message, optional, tag="1")]
    pub time: ::core::option::Option<::prost_types::Timestamp>,
    #[prost(uint64, tag="2")]
    pub number: u64,
    #[prost(string, tag="3")]
    pub date: ::prost::alloc::string::String,
    #[prost(string, tag="4")]
    pub hash: ::prost::alloc::string::String,
    /// block
    #[prost(uint32, tag="5")]
    pub version: u32,
    #[prost(string, tag="6")]
    pub spec: ::prost::alloc::string::String,
    #[prost(uint64, tag="7")]
    pub slot: u64,
    #[prost(uint64, tag="8")]
    pub parent_slot: u64,
    #[prost(string, tag="9")]
    pub root: ::prost::alloc::string::String,
    #[prost(string, tag="10")]
    pub parent_root: ::prost::alloc::string::String,
    #[prost(string, tag="11")]
    pub state_root: ::prost::alloc::string::String,
    #[prost(uint64, tag="12")]
    pub proposer_index: u64,
    #[prost(string, tag="13")]
    pub body_root: ::prost::alloc::string::String,
    #[prost(string, tag="14")]
    pub signature: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Blob {
    /// clock
    #[prost(message, optional, tag="1")]
    pub block_time: ::core::option::Option<::prost_types::Timestamp>,
    #[prost(uint64, tag="2")]
    pub block_number: u64,
    #[prost(string, tag="3")]
    pub block_date: ::prost::alloc::string::String,
    #[prost(string, tag="4")]
    pub block_hash: ::prost::alloc::string::String,
    /// blob
    #[prost(uint64, tag="5")]
    pub index: u64,
    #[prost(string, tag="6")]
    pub blob: ::prost::alloc::string::String,
    #[prost(string, tag="7")]
    pub kzg_commitment: ::prost::alloc::string::String,
    #[prost(string, tag="8")]
    pub kzg_proof: ::prost::alloc::string::String,
    #[prost(string, repeated, tag="9")]
    pub kzg_commitment_inclusion_proof: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Deposit {
    /// clock
    #[prost(message, optional, tag="1")]
    pub block_time: ::core::option::Option<::prost_types::Timestamp>,
    #[prost(uint64, tag="2")]
    pub block_number: u64,
    #[prost(string, tag="3")]
    pub block_date: ::prost::alloc::string::String,
    #[prost(string, tag="4")]
    pub block_hash: ::prost::alloc::string::String,
    /// deposit
    #[prost(uint64, tag="5")]
    pub index: u64,
    #[prost(string, repeated, tag="6")]
    pub proof: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    #[prost(string, tag="7")]
    pub pubkey: ::prost::alloc::string::String,
    #[prost(string, tag="8")]
    pub withdrawal_credentials: ::prost::alloc::string::String,
    #[prost(string, tag="9")]
    pub signature: ::prost::alloc::string::String,
    #[prost(uint64, tag="10")]
    pub gwei: u64,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Withdrawal {
    /// clock
    #[prost(message, optional, tag="1")]
    pub block_time: ::core::option::Option<::prost_types::Timestamp>,
    #[prost(uint64, tag="2")]
    pub block_number: u64,
    #[prost(string, tag="3")]
    pub block_date: ::prost::alloc::string::String,
    #[prost(string, tag="4")]
    pub block_hash: ::prost::alloc::string::String,
    /// withdrawal
    #[prost(uint64, tag="5")]
    pub withdrawal_index: u64,
    #[prost(uint64, tag="6")]
    pub validator_index: u64,
    #[prost(string, tag="7")]
    pub address: ::prost::alloc::string::String,
    #[prost(uint64, tag="8")]
    pub gwei: u64,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Attestation {
    /// clock
    #[prost(message, optional, tag="1")]
    pub block_time: ::core::option::Option<::prost_types::Timestamp>,
    #[prost(uint64, tag="2")]
    pub block_number: u64,
    #[prost(string, tag="3")]
    pub block_date: ::prost::alloc::string::String,
    #[prost(string, tag="4")]
    pub block_hash: ::prost::alloc::string::String,
    /// attestation
    #[prost(uint64, tag="5")]
    pub index: u64,
    #[prost(string, tag="6")]
    pub aggregation_bits: ::prost::alloc::string::String,
    #[prost(uint64, tag="7")]
    pub slot: u64,
    #[prost(uint64, tag="8")]
    pub committee_index: u64,
    #[prost(string, tag="9")]
    pub beacon_block_root: ::prost::alloc::string::String,
    #[prost(uint64, tag="10")]
    pub source_epoch: u64,
    #[prost(string, tag="11")]
    pub source_root: ::prost::alloc::string::String,
    #[prost(uint64, tag="12")]
    pub target_epoch: u64,
    #[prost(string, tag="13")]
    pub target_root: ::prost::alloc::string::String,
    #[prost(string, tag="14")]
    pub signature: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AttesterSlashing {
    /// clock
    #[prost(message, optional, tag="1")]
    pub block_time: ::core::option::Option<::prost_types::Timestamp>,
    #[prost(uint64, tag="2")]
    pub block_number: u64,
    #[prost(string, tag="3")]
    pub block_date: ::prost::alloc::string::String,
    #[prost(string, tag="4")]
    pub block_hash: ::prost::alloc::string::String,
    /// attester slashing
    #[prost(uint64, tag="5")]
    pub index: u64,
    /// attestation
    #[prost(uint64, repeated, tag="6")]
    pub attesting_indices: ::prost::alloc::vec::Vec<u64>,
    #[prost(uint64, tag="7")]
    pub slot: u64,
    #[prost(uint64, tag="8")]
    pub committee_index: u64,
    #[prost(string, tag="9")]
    pub beacon_block_root: ::prost::alloc::string::String,
    #[prost(uint64, tag="10")]
    pub source_epoch: u64,
    #[prost(string, tag="11")]
    pub source_root: ::prost::alloc::string::String,
    #[prost(uint64, tag="12")]
    pub target_epoch: u64,
    #[prost(string, tag="13")]
    pub target_root: ::prost::alloc::string::String,
    #[prost(string, tag="14")]
    pub signature: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct BlsToExecutionChange {
    /// clock
    #[prost(message, optional, tag="1")]
    pub block_time: ::core::option::Option<::prost_types::Timestamp>,
    #[prost(uint64, tag="2")]
    pub block_number: u64,
    #[prost(string, tag="3")]
    pub block_date: ::prost::alloc::string::String,
    #[prost(string, tag="4")]
    pub block_hash: ::prost::alloc::string::String,
    /// bls to execution change
    #[prost(uint64, tag="5")]
    pub index: u64,
    #[prost(uint64, tag="6")]
    pub validator_index: u64,
    #[prost(string, tag="7")]
    pub from_bls_pubkey: ::prost::alloc::string::String,
    #[prost(string, tag="8")]
    pub to_execution_address: ::prost::alloc::string::String,
    #[prost(string, tag="9")]
    pub signature: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ProposerSlashing {
    /// clock
    #[prost(message, optional, tag="1")]
    pub block_time: ::core::option::Option<::prost_types::Timestamp>,
    #[prost(uint64, tag="2")]
    pub block_number: u64,
    #[prost(string, tag="3")]
    pub block_date: ::prost::alloc::string::String,
    #[prost(string, tag="4")]
    pub block_hash: ::prost::alloc::string::String,
    /// proposer slashing
    #[prost(uint64, tag="5")]
    pub index: u64,
    /// signed header
    #[prost(uint64, tag="6")]
    pub slot: u64,
    #[prost(uint64, tag="7")]
    pub proposer_index: u64,
    #[prost(string, tag="8")]
    pub parent_root: ::prost::alloc::string::String,
    #[prost(string, tag="9")]
    pub state_root: ::prost::alloc::string::String,
    #[prost(string, tag="10")]
    pub body_root: ::prost::alloc::string::String,
    #[prost(string, tag="11")]
    pub signature: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct VoluntaryExit {
    /// clock
    #[prost(message, optional, tag="1")]
    pub block_time: ::core::option::Option<::prost_types::Timestamp>,
    #[prost(uint64, tag="2")]
    pub block_number: u64,
    #[prost(string, tag="3")]
    pub block_date: ::prost::alloc::string::String,
    #[prost(string, tag="4")]
    pub block_hash: ::prost::alloc::string::String,
    /// voluntary exit
    #[prost(uint64, tag="5")]
    pub index: u64,
    #[prost(uint64, tag="6")]
    pub epoch: u64,
    #[prost(uint64, tag="7")]
    pub validator_index: u64,
    #[prost(string, tag="8")]
    pub signature: ::prost::alloc::string::String,
}
// @@protoc_insertion_point(module)
