// @generated
// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Events {
    #[prost(message, repeated, tag="1")]
    pub blocks: ::prost::alloc::vec::Vec<Block>,
    #[prost(message, repeated, tag="2")]
    pub transactions: ::prost::alloc::vec::Vec<Transaction>,
    #[prost(message, repeated, tag="3")]
    pub logs: ::prost::alloc::vec::Vec<Log>,
    #[prost(message, repeated, tag="4")]
    pub traces: ::prost::alloc::vec::Vec<Trace>,
    #[prost(message, repeated, tag="5")]
    pub balance_changes: ::prost::alloc::vec::Vec<BalanceChange>,
    #[prost(message, repeated, tag="6")]
    pub storage_changes: ::prost::alloc::vec::Vec<StorageChange>,
    #[prost(message, repeated, tag="7")]
    pub code_changes: ::prost::alloc::vec::Vec<CodeChange>,
    #[prost(message, repeated, tag="8")]
    pub account_creations: ::prost::alloc::vec::Vec<AccountCreation>,
    #[prost(message, repeated, tag="9")]
    pub nonce_changes: ::prost::alloc::vec::Vec<NonceChange>,
    #[prost(message, repeated, tag="10")]
    pub gas_changes: ::prost::alloc::vec::Vec<GasChange>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Block {
    #[prost(message, optional, tag="1")]
    pub time: ::core::option::Option<::prost_types::Timestamp>,
    #[prost(uint64, tag="2")]
    pub number: u64,
    #[prost(string, tag="3")]
    pub date: ::prost::alloc::string::String,
    #[prost(string, tag="4")]
    pub hash: ::prost::alloc::string::String,
    #[prost(string, tag="5")]
    pub parent_hash: ::prost::alloc::string::String,
    #[prost(uint64, tag="6")]
    pub nonce: u64,
    #[prost(string, tag="7")]
    pub ommers_hash: ::prost::alloc::string::String,
    #[prost(string, tag="8")]
    pub logs_bloom: ::prost::alloc::string::String,
    #[prost(string, tag="9")]
    pub transactions_root: ::prost::alloc::string::String,
    #[prost(string, tag="10")]
    pub state_root: ::prost::alloc::string::String,
    #[prost(string, tag="11")]
    pub receipts_root: ::prost::alloc::string::String,
    #[prost(string, tag="12")]
    pub withdrawals_root: ::prost::alloc::string::String,
    #[prost(string, tag="13")]
    pub parent_beacon_root: ::prost::alloc::string::String,
    #[prost(string, tag="14")]
    pub miner: ::prost::alloc::string::String,
    #[prost(uint64, tag="15")]
    pub difficulty: u64,
    #[prost(string, tag="16")]
    pub total_difficulty: ::prost::alloc::string::String,
    #[prost(string, tag="17")]
    pub mix_hash: ::prost::alloc::string::String,
    #[prost(string, tag="18")]
    pub extra_data: ::prost::alloc::string::String,
    #[prost(string, tag="19")]
    pub extra_data_utf8: ::prost::alloc::string::String,
    #[prost(uint64, tag="20")]
    pub gas_limit: u64,
    #[prost(uint64, tag="21")]
    pub gas_used: u64,
    #[prost(string, tag="22")]
    pub base_fee_per_gas: ::prost::alloc::string::String,
    #[prost(string, tag="23")]
    pub blob_gas_used: ::prost::alloc::string::String,
    #[prost(string, tag="24")]
    pub excess_blob_gas: ::prost::alloc::string::String,
    #[prost(uint64, tag="25")]
    pub size: u64,
    #[prost(uint64, tag="26")]
    pub total_transactions: u64,
    #[prost(uint64, tag="27")]
    pub successful_transactions: u64,
    #[prost(uint64, tag="28")]
    pub failed_transactions: u64,
    #[prost(uint64, tag="29")]
    pub total_balance_changes: u64,
    #[prost(uint64, tag="30")]
    pub total_withdrawals: u64,
    #[prost(string, tag="31")]
    pub detail_level: ::prost::alloc::string::String,
    #[prost(uint32, tag="32")]
    pub detail_level_code: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Transaction {
    #[prost(message, optional, tag="1")]
    pub block_time: ::core::option::Option<::prost_types::Timestamp>,
    #[prost(uint64, tag="2")]
    pub block_number: u64,
    #[prost(string, tag="3")]
    pub block_hash: ::prost::alloc::string::String,
    #[prost(string, tag="4")]
    pub block_date: ::prost::alloc::string::String,
    #[prost(string, tag="5")]
    pub transactions_root: ::prost::alloc::string::String,
    #[prost(string, tag="6")]
    pub receipts_root: ::prost::alloc::string::String,
    #[prost(uint32, tag="7")]
    pub index: u32,
    #[prost(string, tag="8")]
    pub hash: ::prost::alloc::string::String,
    #[prost(string, tag="9")]
    pub from: ::prost::alloc::string::String,
    #[prost(string, tag="10")]
    pub to: ::prost::alloc::string::String,
    #[prost(uint64, tag="11")]
    pub nonce: u64,
    #[prost(string, tag="12")]
    pub status: ::prost::alloc::string::String,
    #[prost(uint32, tag="13")]
    pub status_code: u32,
    #[prost(bool, tag="14")]
    pub success: bool,
    #[prost(string, tag="15")]
    pub gas_price: ::prost::alloc::string::String,
    #[prost(uint64, tag="16")]
    pub gas_limit: u64,
    #[prost(string, tag="17")]
    pub value: ::prost::alloc::string::String,
    #[prost(string, tag="18")]
    pub data: ::prost::alloc::string::String,
    #[prost(string, tag="19")]
    pub v: ::prost::alloc::string::String,
    #[prost(string, tag="20")]
    pub r: ::prost::alloc::string::String,
    #[prost(string, tag="21")]
    pub s: ::prost::alloc::string::String,
    #[prost(uint64, tag="22")]
    pub gas_used: u64,
    #[prost(string, tag="23")]
    pub r#type: ::prost::alloc::string::String,
    #[prost(uint32, tag="24")]
    pub type_code: u32,
    #[prost(string, tag="25")]
    pub max_fee_per_gas: ::prost::alloc::string::String,
    #[prost(string, tag="26")]
    pub max_priority_fee_per_gas: ::prost::alloc::string::String,
    #[prost(uint64, tag="27")]
    pub begin_ordinal: u64,
    #[prost(uint64, tag="28")]
    pub end_ordinal: u64,
    #[prost(string, tag="29")]
    pub blob_gas_price: ::prost::alloc::string::String,
    #[prost(uint64, tag="30")]
    pub blob_gas_used: u64,
    #[prost(uint64, tag="31")]
    pub cumulative_gas_used: u64,
    #[prost(string, tag="32")]
    pub logs_bloom: ::prost::alloc::string::String,
    #[prost(string, tag="33")]
    pub state_root: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Log {
    #[prost(message, optional, tag="1")]
    pub block_time: ::core::option::Option<::prost_types::Timestamp>,
    #[prost(uint64, tag="2")]
    pub block_number: u64,
    #[prost(string, tag="3")]
    pub block_hash: ::prost::alloc::string::String,
    #[prost(string, tag="4")]
    pub block_date: ::prost::alloc::string::String,
    #[prost(string, tag="5")]
    pub tx_hash: ::prost::alloc::string::String,
    #[prost(uint32, tag="6")]
    pub tx_index: u32,
    #[prost(string, tag="7")]
    pub tx_status: ::prost::alloc::string::String,
    #[prost(uint32, tag="8")]
    pub tx_status_code: u32,
    #[prost(bool, tag="9")]
    pub tx_success: bool,
    #[prost(string, tag="10")]
    pub tx_from: ::prost::alloc::string::String,
    #[prost(string, tag="11")]
    pub tx_to: ::prost::alloc::string::String,
    #[prost(uint32, tag="12")]
    pub index: u32,
    #[prost(uint32, tag="13")]
    pub block_index: u32,
    #[prost(string, tag="14")]
    pub contract_address: ::prost::alloc::string::String,
    #[prost(string, tag="15")]
    pub topic0: ::prost::alloc::string::String,
    #[prost(string, tag="16")]
    pub topic1: ::prost::alloc::string::String,
    #[prost(string, tag="17")]
    pub topic2: ::prost::alloc::string::String,
    #[prost(string, tag="18")]
    pub topic3: ::prost::alloc::string::String,
    #[prost(string, tag="19")]
    pub data: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Trace {
    #[prost(message, optional, tag="1")]
    pub block_time: ::core::option::Option<::prost_types::Timestamp>,
    #[prost(uint64, tag="2")]
    pub block_number: u64,
    #[prost(string, tag="3")]
    pub block_hash: ::prost::alloc::string::String,
    #[prost(string, tag="4")]
    pub block_date: ::prost::alloc::string::String,
    #[prost(string, tag="5")]
    pub tx_hash: ::prost::alloc::string::String,
    #[prost(uint32, tag="6")]
    pub tx_index: u32,
    #[prost(string, tag="7")]
    pub tx_status: ::prost::alloc::string::String,
    #[prost(uint32, tag="8")]
    pub tx_status_code: u32,
    #[prost(bool, tag="9")]
    pub tx_success: bool,
    #[prost(string, tag="10")]
    pub from: ::prost::alloc::string::String,
    #[prost(string, tag="11")]
    pub to: ::prost::alloc::string::String,
    #[prost(uint32, tag="12")]
    pub index: u32,
    #[prost(uint32, tag="13")]
    pub parent_index: u32,
    #[prost(uint32, tag="14")]
    pub depth: u32,
    #[prost(string, tag="15")]
    pub caller: ::prost::alloc::string::String,
    #[prost(string, tag="16")]
    pub call_type: ::prost::alloc::string::String,
    #[prost(uint32, tag="17")]
    pub call_type_code: u32,
    #[prost(string, tag="18")]
    pub address: ::prost::alloc::string::String,
    #[prost(string, tag="19")]
    pub value: ::prost::alloc::string::String,
    #[prost(uint64, tag="20")]
    pub gas_limit: u64,
    #[prost(uint64, tag="21")]
    pub gas_consumed: u64,
    #[prost(string, tag="22")]
    pub return_data: ::prost::alloc::string::String,
    #[prost(string, tag="23")]
    pub input: ::prost::alloc::string::String,
    #[prost(bool, tag="24")]
    pub suicide: bool,
    #[prost(string, tag="25")]
    pub failure_reason: ::prost::alloc::string::String,
    #[prost(bool, tag="26")]
    pub state_reverted: bool,
    #[prost(bool, tag="27")]
    pub status_reverted: bool,
    #[prost(bool, tag="28")]
    pub status_failed: bool,
    #[prost(bool, tag="29")]
    pub executed_code: bool,
    #[prost(uint64, tag="30")]
    pub begin_ordinal: u64,
    #[prost(uint64, tag="31")]
    pub end_ordinal: u64,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct BalanceChange {
    #[prost(message, optional, tag="1")]
    pub block_time: ::core::option::Option<::prost_types::Timestamp>,
    #[prost(uint64, tag="2")]
    pub block_number: u64,
    #[prost(string, tag="3")]
    pub block_hash: ::prost::alloc::string::String,
    #[prost(string, tag="4")]
    pub block_date: ::prost::alloc::string::String,
    #[prost(string, tag="5")]
    pub address: ::prost::alloc::string::String,
    #[prost(string, tag="6")]
    pub new_balance: ::prost::alloc::string::String,
    #[prost(string, tag="7")]
    pub old_balance: ::prost::alloc::string::String,
    #[prost(string, tag="8")]
    pub amount: ::prost::alloc::string::String,
    #[prost(uint64, tag="9")]
    pub ordinal: u64,
    #[prost(string, tag="10")]
    pub reason: ::prost::alloc::string::String,
    #[prost(uint32, tag="11")]
    pub reason_code: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct StorageChange {
    #[prost(message, optional, tag="1")]
    pub block_time: ::core::option::Option<::prost_types::Timestamp>,
    #[prost(uint64, tag="2")]
    pub block_number: u64,
    #[prost(string, tag="3")]
    pub block_hash: ::prost::alloc::string::String,
    #[prost(string, tag="4")]
    pub block_date: ::prost::alloc::string::String,
    #[prost(uint64, tag="5")]
    pub ordinal: u64,
    #[prost(string, tag="6")]
    pub address: ::prost::alloc::string::String,
    #[prost(string, tag="7")]
    pub key: ::prost::alloc::string::String,
    #[prost(string, tag="8")]
    pub new_value: ::prost::alloc::string::String,
    #[prost(string, tag="9")]
    pub old_value: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CodeChange {
    #[prost(message, optional, tag="1")]
    pub block_time: ::core::option::Option<::prost_types::Timestamp>,
    #[prost(uint64, tag="2")]
    pub block_number: u64,
    #[prost(string, tag="3")]
    pub block_hash: ::prost::alloc::string::String,
    #[prost(string, tag="4")]
    pub block_date: ::prost::alloc::string::String,
    #[prost(uint64, tag="5")]
    pub ordinal: u64,
    #[prost(string, tag="6")]
    pub address: ::prost::alloc::string::String,
    #[prost(string, tag="7")]
    pub old_hash: ::prost::alloc::string::String,
    #[prost(string, tag="8")]
    pub old_code: ::prost::alloc::string::String,
    #[prost(string, tag="9")]
    pub new_hash: ::prost::alloc::string::String,
    #[prost(string, tag="10")]
    pub new_code: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AccountCreation {
    #[prost(message, optional, tag="1")]
    pub block_time: ::core::option::Option<::prost_types::Timestamp>,
    #[prost(uint64, tag="2")]
    pub block_number: u64,
    #[prost(string, tag="3")]
    pub block_hash: ::prost::alloc::string::String,
    #[prost(string, tag="4")]
    pub block_date: ::prost::alloc::string::String,
    #[prost(uint64, tag="5")]
    pub ordinal: u64,
    #[prost(string, tag="6")]
    pub account: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct NonceChange {
    #[prost(message, optional, tag="1")]
    pub block_time: ::core::option::Option<::prost_types::Timestamp>,
    #[prost(uint64, tag="2")]
    pub block_number: u64,
    #[prost(string, tag="3")]
    pub block_hash: ::prost::alloc::string::String,
    #[prost(string, tag="4")]
    pub block_date: ::prost::alloc::string::String,
    #[prost(uint64, tag="5")]
    pub ordinal: u64,
    #[prost(string, tag="6")]
    pub address: ::prost::alloc::string::String,
    #[prost(uint64, tag="7")]
    pub old_value: u64,
    #[prost(uint64, tag="8")]
    pub new_value: u64,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GasChange {
    #[prost(message, optional, tag="1")]
    pub block_time: ::core::option::Option<::prost_types::Timestamp>,
    #[prost(uint64, tag="2")]
    pub block_number: u64,
    #[prost(string, tag="3")]
    pub block_hash: ::prost::alloc::string::String,
    #[prost(string, tag="4")]
    pub block_date: ::prost::alloc::string::String,
    #[prost(uint64, tag="5")]
    pub ordinal: u64,
    #[prost(uint64, tag="6")]
    pub old_value: u64,
    #[prost(uint64, tag="7")]
    pub new_value: u64,
    #[prost(string, tag="8")]
    pub reason: ::prost::alloc::string::String,
    #[prost(uint32, tag="9")]
    pub reason_code: u32,
}
// @@protoc_insertion_point(module)
