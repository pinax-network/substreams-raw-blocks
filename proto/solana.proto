syntax = "proto3";

package pinax.solana.v1;

import "google/protobuf/timestamp.proto";

message Events {
  repeated Block blocks = 1;
  repeated Reward rewards = 2;
  repeated Transaction transactions = 3;
  repeated InstructionCall instruction_calls = 4;
  repeated AccountActivity account_activity = 5;
  repeated Transaction vote_transactions = 6;
  repeated InstructionCall vote_instruction_calls = 7;
  repeated AccountActivity vote_account_activity = 8;
}

message Block {
  // clock
  string time = 1; // TIMESTAMP
  string date = 2;
  string hash = 3;

  // block
  uint64 slot = 4;
  uint64 height = 5;
  string previous_block_hash = 6;
  uint64 parent_slot = 7;

  // counters
  uint64 total_transactions = 8;
  uint64 successful_transactions = 9;
  uint64 failed_transactions = 10;
  uint64 total_vote_transactions = 11;
  uint64 total_non_vote_transactions = 12;
  uint64 successful_vote_transactions = 13;
  uint64 successful_non_vote_transactions = 14;
  uint64 failed_vote_transactions = 15;
  uint64 failed_non_vote_transactions = 16;
}

message Reward {
  // clock
  string block_time = 1; // TIMESTAMP
  string block_date = 2;
  string block_hash = 3;

  // block
  uint64 block_slot = 4;
  uint64 block_height = 5;
  string block_previous_block_hash = 6;
  uint64 block_parent_slot = 7;

  // reward
  string pubkey = 8;
  int64 lamports = 9;
  uint64 pre_balance = 10;
  uint64 post_balance = 11;
  string reward_type = 12;
  string commission = 13;
}

message Transaction {
  // clock
  string block_time = 1; // TIMESTAMP
  string block_hash = 2;
  string block_date = 3;

  // block
  uint64 block_slot = 4;
  uint64 block_height = 5;
  string block_previous_block_hash = 6;
  uint64 block_parent_slot = 7;

  // transaction
  string id = 10;
  uint32 index = 11;
  uint32 required_signatures = 12;
  uint32 required_signed_accounts = 13;
  uint32 required_unsigned_accounts = 14;
  string signature = 15;
  repeated string signatures = 16;

  // message
  string recent_block_hash = 20;
  repeated string account_keys = 21;
  repeated string log_messages = 22;
  repeated string pre_balances = 23; // repeated uint64
  repeated string post_balances = 24; // repeated uint64
  string signer = 25;
  repeated string signers = 26;

  // meta
  uint64 fee = 30;
  bool success = 31;
  string error = 32;
  uint64 compute_units_consumed = 33; // Sum of compute units consumed by all instructions. Available since Solana v1.10.35 / v1.11.6. Set to None for txs executed on earlier versions.
}

message InstructionCall {
  // clock
  string block_time = 1; // TIMESTAMP
  string block_hash = 2;
  string block_date = 3;

  // block
  uint64 block_slot = 4;
  uint64 block_height = 5;
  string block_previous_block_hash = 6;
  uint64 block_parent_slot = 7;

  // transaction
  string tx_id = 8;
  uint32 tx_index = 9;
  string tx_signer = 10;
  bool tx_success = 11;
  repeated string log_messages = 12;

  // instruction
  uint32 outer_instruction_index = 13;
  int32 inner_instruction_index = 14;
  string inner_executing_account = 15;
  string outer_executing_account = 16;
  string executing_account = 17;
  bool is_inner = 18;
  string data = 19;
  repeated string account_arguments = 20;
  // TODO: Use repeated InnerInstruction when supported by parquet sink
  string inner_instructions = 21;
  string program_id = 22; // Returns the resolved program id defined by this instruction as an Address type which is a wrapper around a byte array and provide Address::to_string method to get the base58 encoded string:
  uint32 stack_height = 23; // Returns the stack height of the instruction or zero if instruction does not have a stack height field which appeared in Solana v1.14.6 and activated around block 200M on Mainnet. So if you deal with block heights before that, you can think of using maybe_stack_height method to determine if the field is present or not

  // meta
  uint64 compute_units_consumed = 24; // Sum of compute units consumed by all instructions. Available since Solana v1.10.35 / v1.11.6. Set to None for txs executed on earlier versions.
  uint64 fee = 25;

}

message AccountActivity {
  // clock
  string block_time = 1; // TIMESTAMP
  string block_hash = 2;
  string block_date = 3;

  // block
  uint64 block_slot = 4;
  uint64 block_height = 5;
  string block_previous_block_hash = 6;
  uint64 block_parent_slot = 7;

  string address = 8;
  uint32 tx_index = 9;
  string tx_id = 10;
  bool tx_success = 11;
  bool signed = 12;
  bool writable = 13;
  optional string token_mint_address = 14;

  uint64 pre_balance = 15;
  uint64 post_balance = 16;
  int64 balance_change = 17;
  optional double pre_token_balance = 18;
  optional double post_token_balance = 19;
  optional double token_balance_change = 20;
  optional string token_balance_owner = 21;
}
