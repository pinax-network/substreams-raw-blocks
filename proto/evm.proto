syntax = "proto3";

package pinax.evm.v1;

// import "google/protobuf/timestamp.proto";

message Events {
  repeated Block blocks = 1;
  repeated Transaction transactions = 2;
  repeated Log logs = 3;
  repeated Trace traces = 4;
  repeated BalanceChange balance_changes = 5;
  repeated StorageChange storage_changes = 6;
  repeated CodeChange code_changes = 7;
  repeated AccountCreation account_creations = 8;
  repeated NonceChange nonce_changes = 9;
  repeated GasChange gas_changes = 10;
}

message Block {
  // -- clock --
  string time = 1; // TIMESTAMP
  uint64 number = 2;
  string date = 3;
  string hash = 4;

  // -- roots --
  string ommers_hash = 5;
  string logs_bloom = 6;
  string transactions_root = 7;
  string state_root = 8;
  string receipts_root = 9;
  string withdrawals_root = 10; // EVM Root EIP-4895 (Shangai Fork)
  string parent_beacon_root = 11; // EVM Root EIP-4788 (Dencun Fork)

  // -- header --
  string parent_hash = 12;
  uint64 nonce = 13;
  string miner = 14;
  uint64 difficulty = 15;
  bytes total_difficulty_bytes = 16; // UInt256
  string mix_hash = 17;
  string extra_data = 18;
  string extra_data_utf8 = 19;
  uint64 gas_limit = 20;
  uint64 gas_used = 21;
  string base_fee_per_gas = 22; // EIP-1559 (London Fork)

  // -- blobs --
  uint64 blob_gas_used = 23; // EIP-4844 (Dencun Fork)
  uint64 excess_blob_gas = 24; // EIP-4844 (Dencun Fork)
  bytes blob_gas_price_bytes = 25; // UInt256
  repeated string blob_transactions = 26; // EIP-4844 (Dencun Fork)
  repeated string blob_hashes = 27; // EIP-4844 (Dencun Fork)
  uint32 total_blob_transactions = 28; // EIP-4844 (Dencun Fork)
  uint32 total_blobs = 29; // EIP-4844 (Dencun Fork),

  // -- counters --
  uint64 size = 30; // block size in bytes
  uint32 total_transactions = 31;
  uint32 successful_transactions = 32;
  uint32 failed_transactions = 33;
  uint32 total_balance_changes = 34;
  uint32 total_withdrawals = 35;

  // -- detail level --
  string detail_level = 38;
  uint32 detail_level_code = 39;
}

message Transaction {
  // -- block --
  string block_time = 1; // TIMESTAMP
  uint64 block_number = 2;
  string block_hash = 3;
  string block_date = 4;

  // -- block roots --
  string transactions_root = 5;
  string receipts_root = 6;

  // -- transaction --
  uint32 index = 7;
  string hash = 8;
  string from = 9;
  string to = 10;
  uint64 nonce = 11;
  string status = 12;
  uint32 status_code = 13;
  bool success = 14;
  bytes gas_price_bytes = 15; // UInt256
  uint64 gas_limit = 16;
  bytes value_bytes = 17; // UInt256
  string data = 18;
  string v = 19;
  string r = 20;
  string s = 21;
  uint64 gas_used = 22;
  string type = 23; // EIP-1559
  uint32 type_code = 24; // EIP-1559
  bytes max_fee_per_gas_bytes = 25; // UInt256
  bytes max_priority_fee_per_gas_bytes = 26; // UInt256
  uint64 begin_ordinal = 27;
  uint64 end_ordinal = 28;

  // -- blobs --
  bytes blob_gas_price_bytes = 29; // UInt256
  uint64 blob_gas_used = 30;
  bytes blob_gas_fee_cap_bytes = 31; // UInt256
  repeated string blob_hashes = 32; // EIP-4844 (Dencun Fork)

  // -- transaction receipt --
  uint64 cumulative_gas_used = 33;
  string logs_bloom = 34;
  string state_root = 35;
}

message Log {
  // -- block --
  string block_time = 1; // TIMESTAMP
  uint64 block_number = 2;
  string block_hash = 3;
  string block_date = 4;

  // -- transaction --
  string tx_hash = 5;
  uint32 tx_index = 6;
  string tx_status = 7;
  uint32 tx_status_code = 8;
  bool tx_success = 9;
  string tx_from = 10;
  string tx_to = 11;

  // -- logs --
  uint32 index = 12;
  uint32 block_index = 13;
  string contract_address = 14;
  string topic0 = 15;
  optional string topic1 = 16;
  optional string topic2 = 17;
  optional string topic3 = 18;
  string data = 19;
}

message Trace {
  // -- block --
  string block_time = 1; // TIMESTAMP
  uint64 block_number = 2;
  string block_hash = 3;
  string block_date = 4;

  // -- transaction --
  string tx_hash = 5;
  uint32 tx_index = 6;
  string tx_status = 7;
  uint32 tx_status_code = 8;
  bool tx_success = 9;
  string from = 10;
  string to = 11;

  // -- trace --
  uint32 index = 12;
  uint32 parent_index = 13;
  uint32 depth = 14;
  string caller = 15;
  string call_type = 16;
  uint32 call_type_code = 17;
  string address = 18;
  bytes value_bytes = 19; // UInt256
  string value_hex = 20; // UInt256 - FOR TESTING PURPOSES
  uint64 gas_limit = 21;
  uint64 gas_consumed = 22;
  string return_data = 23; // Return data is set by contract calls using RETURN or REVERT.
  string input = 24;
  bool suicide = 25;
  string failure_reason = 26;
  bool state_reverted = 27;
  bool status_reverted = 28;
  bool status_failed = 29;
  bool executed_code = 30;
  uint64 begin_ordinal = 31;
  uint64 end_ordinal = 32;
}

message BalanceChange {
  // -- block --
  string block_time = 1; // TIMESTAMP
  uint64 block_number = 2;
  string block_hash = 3;
  string block_date = 4;

  // -- transaction --
  optional string tx_hash = 5;

  // -- balance change --
  string address = 6;
  bytes new_balance_bytes = 7; // UInt256
  bytes old_balance_bytes = 8; // UInt256
  uint64 ordinal = 10;
  string reason = 11;
  uint32 reason_code = 12;
}

message StorageChange {
  // -- block --
  string block_time = 1; // TIMESTAMP
  uint64 block_number = 2;
  string block_hash = 3;
  string block_date = 4;

  // -- transaction --
  optional string tx_hash = 5;

  // -- storage change --
  uint64 ordinal = 6; // block global ordinal
  string address = 7;
  string key = 8;
  string new_value = 9;
  string old_value = 10;
}

message CodeChange {
  // -- block --
  string block_time = 1; // TIMESTAMP
  uint64 block_number = 2;
  string block_hash = 3;
  string block_date = 4;

  // -- transaction --
  string tx_hash = 5;

  // -- creation trace --
  string address = 6;
  string from = 7;
  string factory = 8;
  string code = 9;
}

message AccountCreation {
  // -- block --
  string block_time = 1; // TIMESTAMP
  uint64 block_number = 2;
  string block_hash = 3;
  string block_date = 4;

  // -- transaction --
  optional string tx_hash = 5;

  // -- account creation --
  uint64 ordinal = 6; // block global ordinal
  string account = 7;
}

message NonceChange {
  // -- block --
  string block_time = 1; // TIMESTAMP
  uint64 block_number = 2;
  string block_hash = 3;
  string block_date = 4;

  // -- transaction --
  optional string tx_hash = 5;

  // -- nonce change --
  uint64 ordinal = 6; // block global ordinal
  string address = 7;
  uint64 old_value = 8;
  uint64 new_value = 9;
}

message GasChange {
  // -- block --
  string block_time = 1; // TIMESTAMP
  uint64 block_number = 2;
  string block_hash = 3;
  string block_date = 4;

  // -- transaction --
  optional string tx_hash = 5;

  // -- gas change --
  uint64 ordinal = 6; // block global ordinal
  uint64 old_value = 7;
  uint64 new_value = 8;
  string reason = 9;
  uint32 reason_code = 10;
}
