syntax = "proto3";

package pinax.beacon.v1;

import "google/protobuf/timestamp.proto";

message Events {
  repeated Block blocks = 1;
  repeated Blob blobs = 2;
  repeated Deposit deposits = 3;
  repeated Withdrawal withdrawals = 4;
  repeated Attestation attestations = 5;
  repeated AttesterSlashing attester_slashings = 6;
  repeated BlsToExecutionChange bls_to_execution_changes = 7;
  repeated ProposerSlashing proposer_slashings = 8;
  repeated VoluntaryExit voluntary_exits = 9;
}

message Block {
  // clock
  string time = 1; // TIMESTAMP
  uint64 number = 2;
  string date = 3;
  string hash = 4;

  // block
  uint32 version = 5;
  string spec = 6;
  uint64 slot = 7;
  uint64 parent_slot = 8;
  string root = 9;
  string parent_root = 10;
  string state_root = 11;
  uint64 proposer_index = 12;
  string body_root = 13;
  string signature = 14;
}

message Blob {
  // clock
  string block_time = 1; // TIMESTAMP
  uint64 block_number = 2;
  string block_date = 3;
  string block_hash = 4;

  // blob
  uint64 index = 5;
  string blob = 6;
  string kzg_commitment = 7;
  string kzg_proof = 8;
  repeated string kzg_commitment_inclusion_proof = 9;
}

message Deposit {
  // clock
  string block_time = 1; // TIMESTAMP
  uint64 block_number = 2;
  string block_date = 3;
  string block_hash = 4;

  // deposit
  uint64 index = 5;
  repeated string proof = 6;
  string pubkey = 7;
  string withdrawal_credentials = 8;
  string signature = 9;
  uint64 gwei = 10;
}

message Withdrawal {
  // clock
  string block_time = 1; // TIMESTAMP
  uint64 block_number = 2;
  string block_date = 3;
  string block_hash = 4;

  // withdrawal
  uint64 withdrawal_index = 5;
  uint64 validator_index = 6;
  string address = 7;
  uint64 gwei = 8;
}

message Attestation {
  // clock
  string block_time = 1; // TIMESTAMP
  uint64 block_number = 2;
  string block_date = 3;
  string block_hash = 4;

  // attestation
  uint64 index = 5;
  string aggregation_bits = 6;
  uint64 slot = 7;
  uint64 committee_index = 8;
  string beacon_block_root = 9;
  uint64 source_epoch = 10;
  string source_root = 11;
  uint64 target_epoch = 12;
  string target_root = 13;
  string signature = 14;
}

message AttesterSlashing {
  // clock
  string block_time = 1; // TIMESTAMP
  uint64 block_number = 2;
  string block_date = 3;
  string block_hash = 4;

  // attester slashing
  uint64 index = 5;

  // attestation
  repeated uint64 attesting_indices = 6;
  uint64 slot = 7;
  uint64 committee_index = 8;
  string beacon_block_root = 9;
  uint64 source_epoch = 10;
  string source_root = 11;
  uint64 target_epoch = 12;
  string target_root = 13;
  string signature = 14;
}

message BlsToExecutionChange {
  // clock
  string block_time = 1; // TIMESTAMP
  uint64 block_number = 2;
  string block_date = 3;
  string block_hash = 4;

  // bls to execution change
  uint64 index = 5;
  uint64 validator_index = 6;
  string from_bls_pubkey = 7;
  string to_execution_address = 8;
  string signature = 9;
}

message ProposerSlashing {
  // clock
  string block_time = 1; // TIMESTAMP
  uint64 block_number = 2;
  string block_date = 3;
  string block_hash = 4;

  // proposer slashing
  uint64 index = 5;

  // signed header
  uint64 slot = 6;
  uint64 proposer_index = 7;
  string parent_root = 8;
  string state_root = 9;
  string body_root = 10;
  string signature = 11;
}

message VoluntaryExit {
  // clock
  string block_time = 1; // TIMESTAMP
  uint64 block_number = 2;
  string block_date = 3;
  string block_hash = 4;

  // voluntary exit
  uint64 index = 5;
  uint64 epoch = 6;
  uint64 validator_index = 7;
  string signature = 8;
}
